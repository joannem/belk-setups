input {
    beats {
        port => "5044"
        ssl => true
        ssl_certificate_authorities => ["/usr/share/logstash/elasticsearch-certs/ca/ca.crt"]
        ssl_certificate => "/usr/share/logstash/logstash-certs/logstash.crt"
        ssl_key => "/usr/share/logstash/logstash-certs/logstash.pkcs8.key"
        ssl_verify_mode => "force_peer"
    }
}

filter {
    if [log][file][path] == "/data/logs/pf3.log" {
        mutate {
            add_field => { "[@metadata][to_index]" => "pf3-core-logs" }
        }
        grok {
            match => {
                "message" => [
                    "%{NUMBER:pf3-timestamp} %{LOGLEVEL:log-level} %{WORD:dpdk-rx-intf} %{DATA} imiss %{NUMBER:rx-imiss} %{DATA} rx_nombuf %{NUMBER:rx-nombuf}",
                    "%{NUMBER:pf3-timestamp} %{LOGLEVEL:log-level} %{WORD:rx-intf} %{DATA} qdrop %{NUMBER:rx-qdrop} %{DATA}",
                    "%{NUMBER:pf3-timestamp} %{LOGLEVEL:log-level} %{WORD:dpdk-tx-intf} %{DATA} omiss %{NUMBER:tx-omiss} %{DATA}",
                    "%{NUMBER:pf3-timestamp} %{LOGLEVEL:log-level} %{WORD:tx-intf} %{DATA} oqdrop %{NUMBER:tx-oqdrop} %{DATA}",
                    "%{NUMBER:pf3-timestamp} %{LOGLEVEL:log-level} %{DATA} cap %{NUMBER:rx-mbps:float} Mb/s fdrop %{NUMBER:fdrop} %{DATA} rdrop %{NUMBER:rdrop} %{DATA} ldrop %{NUMBER:ldrop} %{DATA}"
                ]
            }
        }
    }
}

output {
    if [log][file][path] == "/data/logs/pf3.log" {
        elasticsearch {
            hosts => [ "https://es01:9200" ]
            #data_stream => true
            ssl => true
            cacert => "/usr/share/logstash/elasticsearch-certs/ca/ca.crt"
            api_key => "xxx:xxx"
            index => "%{[@metadata][to_index]}-%{+YYYY.MM.dd}"
            action => "create"
        }
        #stdout {
        #    codec => rubydebug
        #}
    }
}
